<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapepr 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="adminMapper">
	<select id="selectNormalList" resultType="Member_N">
		SELECT
		       M.ID
		     , NICKNAME
		     , NAME
             , REGEXP_REPLACE(PHONE, '(.{3})(.+)(.{4})', '\1-\2-\3') AS PHONE
		     , EMAIL
		     , BLIND
			 , CASE ISACTIVE WHEN 'Y' THEN '../../resources/img/admin/icon/active.svg'
                             ELSE '../../resources/img/admin/icon/inactive.svg'
               END AS ISACTIVE
		  FROM
		       MEMBER M
	 LEFT JOIN
	           M_NORMAL N ON(M.ID = N.ID)
	     WHERE
	     	   GRADE = 'N'
	</select>
	<select id="selectPartnerList" resultType="A_Member_P">
		SELECT
		       M.ID
		     , C_NAME AS CAFE
             , NAME
             , ADDR
             , REGEXP_REPLACE(PHONE, '(.{3})(.+)(.{4})', '\1-\2-\3') AS PHONE
             , EMAIL
             , WARNED
             , TO_CHAR(ENDATE,'yyyy-mm-dd')AS ENDATE
			 , CASE ISACTIVE WHEN 'Y' THEN '../../resources/img/admin/icon/active.svg'
                             ELSE '../../resources/img/admin/icon/inactive.svg'
               END AS ISACTIVE
		  FROM
		       MEMBER M
	 LEFT JOIN
	           M_PARTNER P ON(M.ID = P.ID)
     LEFT JOIN
               CAFE C ON(M.ID = C.ID)
	     WHERE
	     	   GRADE = 'P'
	       AND
	       	   C_NAME IS NOT NULL
	</select>
		<select id="selectCouponByDate" parameterType="string" resultType="Coupon">
		   SELECT C.COUPON_NAME
             	, ISSUEDBY
             	, LIMIT
             	, COUNT(C.COUPON_NAME) AS ISSUED
             	, COUNT(CASE WHEN EXPDATE <![CDATA[<]]> SYSDATE AND ISUSED = 'N' THEN 1 ELSE NULL END) AS EXPIRED
                , COUNT(CASE WHEN ISUSED = 'Y' THEN 1 ELSE NULL END) AS USED
			 FROM COUPON C
		<choose>
     		<when test="_parameter == 'day'">WHERE TO_DATE(SYSDATE,'yy-mm-dd') - TO_DATE(ISSUEDATE, 'yy-mm-dd') = 0</when>
     		<when test="_parameter == 'week'">WHERE ISSUEDATE <![CDATA[>=]]> TRUNC(SYSDATE, 'IW')
									  AND ISSUEDATE <![CDATA[<]]> TRUNC(SYSDATE, 'IW') + 7</when>
     		<when test="_parameter == 'month'">WHERE ISSUEDATE <![CDATA[>=]]> TRUNC(SYSDATE, 'MM')
					   AND ISSUEDATE <![CDATA[<]]> LAST_DAY(SYSDATE)</when>
			<when test="_parameter == 'year'">WHERE EXTRACT(YEAR FROM ISSUEDATE) = EXTRACT(YEAR FROM SYSDATE)</when>
   		</choose>
		 GROUP BY C.COUPON_NAME, ISSUEDBY, LIMIT
	</select>
		<select id="selectCouponByTerm" parameterType="map" resultType="Coupon">
			SELECT
				  C.COUPON_NAME
             	, ISSUEDBY
             	, LIMIT
             	, COUNT(C.COUPON_NAME) AS ISSUED
				, COUNT(CASE WHEN EXPDATE <![CDATA[<]]> SYSDATE AND ISUSED = 'N' THEN 1 ELSE NULL END) AS EXPIRED
                , COUNT(CASE WHEN ISUSED = 'Y' THEN 1 ELSE NULL END) AS USED
			 FROM COUPON C
       		WHERE ISSUEDATE <![CDATA[>]]> #{startDate}
       		  AND ISSUEDATE <![CDATA[<]]> #{endDate}
         GROUP BY C.COUPON_NAME, ISSUEDBY, LIMIT
		</select>
		<select id="selectAdWaitingList" resultType="A_Promo">
		 SELECT
               AD_CODE AS ADCODE
             , C_NAME AS CAFE
             , TO_CHAR(APPLYDATE,'yyyy-mm-dd') AS APPLYDATE
             , TO_CHAR(POSTDATE,'yyyy-mm-dd') AS POSTDATE
             , CONCAT(DURATION, '일') AS DURATION
             , RENAME_IMAGE AS RENAMEIMAGE
             , IMAGE
             , AD_STATUS AS ADSTATUS
             , A.ID AS ID
             , BN_CODE AS BNCODE
             , URL
		  FROM
		  	   AD A
    INNER JOIN
			   CAFE C ON(A.ID = C.ID)
		 WHERE
		 	   AD_STATUS = '승인 대기'
		</select>
		<select id="selectAdConfirmedList" resultType="A_Promo">
		 SELECT
               AD_CODE AS ADCODE
             , C_NAME AS CAFE
             , TO_CHAR(APPLYDATE,'yyyy-mm-dd') AS APPLYDATE
             , TO_CHAR(POSTDATE,'yyyy-mm-dd') AS POSTDATE
             , CONCAT(DURATION, '일') AS DURATION
             , RENAME_IMAGE AS RENAMEIMAGE
             , IMAGE
             , AD_STATUS AS ADSTATUS
             , A.ID AS ID
             , BN_CODE AS BNCODE
             , URL
             
		  FROM
		  	   AD A
    INNER JOIN
			   CAFE C ON(A.ID = C.ID)
		 WHERE
		 	   AD_STATUS = '승인 완료'		
		</select>
		<update id="updateAdConfirmed" parameterType="string">
		UPDATE
			   AD
		   SET
		       AD_STATUS = '승인 완료'
		 WHERE 
			   AD_CODE = #{adCode}	
		</update>
		<update id="updateAdRejected" parameterType="A_Promo">
		UPDATE
			   AD
		   SET
		       AD_STATUS = '반려'
		     , AD_REJECT = #{value}
		 WHERE 
			   AD_CODE = #{adCode}	
		</update>
		<select id="selectReportedPartnerList" resultType="A_REPORT_P">	
		SELECT
			   ITEM_CODE AS PRCODE
			 , REPORT_NO AS REPORTNO
		     , C_NAME AS CAFE
		     , NAME AS CEO
		     , REPORT_TYPE AS REPORTTYPE
             , REPORT_REASON AS REPORTREASON
		     , REGEXP_REPLACE(PHONE, '(.{3})(.+)(.{4})', '\1-\2-\3') AS PHONE
		     , CASE WHEN REPORT_NO LIKE 'STRP%' THEN '스토어'
					WHEN REPORT_NO LIKE 'CLRP%' THEN '클래스'
					WHEN REPORT_NO LIKE 'CARP%' THEN '카페'
					END AS SERVICE
	         , CONCAT(WARNED, '건') AS ACCU
	         , REPORTER_ID AS REPORTER
	         , REPORTEE_ID AS REPORTEE
		  FROM
		 	   REPORT R
    INNER JOIN
		 	   MEMBER M ON(R.REPORTEE_ID = M.ID)
    INNER JOIN
   			   CAFE C ON(R.REPORTEE_ID = C.ID)
    INNER JOIN  
   			   M_PARTNER P ON(R.REPORTEE_ID = P.ID)
		 WHERE 
			   ISCHECKED = 'F'
		</select>
		<select id="selectCompletedPartnerList" resultType="A_REPORT_P">
		SELECT
			   ITEM_CODE AS PRCODE
			 , REPORT_NO AS REPORTNO
		     , C_NAME AS CAFE
		     , NAME AS CEO
		     , REPORT_TYPE AS REPORTTYPE
             , REPORT_REASON AS REPORTREASON
		     , REGEXP_REPLACE(PHONE, '(.{3})(.+)(.{4})', '\1-\2-\3') AS PHONE
		     , CASE WHEN REPORT_NO LIKE 'STRP%' THEN '스토어'
					WHEN REPORT_NO LIKE 'CLRP%' THEN '클래스'
					WHEN REPORT_NO LIKE 'CARP%' THEN '카페'
					END AS SERVICE
	         , CONCAT(WARNED, '건') AS ACCU
	         , REPORTER_ID AS REPORTER
	         , REPORTEE_ID AS REPORTEE
	         , CASE ISWARNED WHEN 'T' THEN '../../resources/img/admin/icon/accept.svg'
                             ELSE '../../resources/img/admin/icon/denied.svg'
               END AS STATUS
		  FROM 
		  	   REPORT R
    INNER JOIN 
    		   MEMBER M ON(R.REPORTEE_ID = M.ID)
    INNER JOIN
   	   		   CAFE C ON(R.REPORTEE_ID = C.ID)
    INNER JOIN
    		   M_PARTNER P ON(R.REPORTEE_ID = P.ID)
	     WHERE
	     	   ISCHECKED = 'T'
		</select>
		<update id="updatePartnerWarned" parameterType="A_Report_P">
	     UPDATE 
	    	    M_PARTNER
	    	SET
	    		WARNED = WARNED + 1
	      WHERE
	      		ID = #{reportee}
		</update>
		<update id="updateReportStatus" parameterType="A_Report_P">
		 UPDATE
		 	 	REPORT
		 	SET
		 		ISCHECKED = 'T'
		 	  , ISWARNED = 'T'
		  WHERE
		  	    REPORT_NO = #{reportNo}
		</update>
		<update id="updatePartnerReportInvalid" parameterType="A_Report_P">
		 UPDATE
		 	 	REPORT
		 	SET
		 		ISCHECKED = 'T'
		 	  , ISWARNED = 'F'
		  WHERE
		  	    REPORT_NO = #{reportNo}
		</update>
 		<select id="selectReportedUserList" resultType="A_Report_N">
		SELECT 
	           REPORT_NO AS REPORTNO
	         , REPORT_TYPE AS REPORTTYPE
	         , REPORT_REASON AS REPORTREASON
         	 , CONCAT(NVL(BLIND, '0'), '건') AS ACCU
	         , IMGNAME
	         , NVL2(IMGNAME, 'O', 'X') AS HASIMG
	         , IMGPATH
	         , IMGCHNAME
	         , REPORTER_ID AS REPORTER
	         , REPORTEE_ID AS REPORTEE
	         , ITEM_CODE AS ITEMCODE
	         , NVL(REVIEW_CONTENT, ' ') AS STOREREVIEWCONTENT
	         , NVL(C_REV_CON, ' ') AS CAFEREVIEWCONTENT
	         , NVL(CL_REVIEW, ' ') AS CLASSREVIEWCONTENT
		 FROM
	          REPORT R
	     JOIN
	     	  MEMBER M ON(R.REPORTEE_ID = M.ID)
	LEFT JOIN
		      PR_REVIEW STRV ON (R.REPORTEE_ID = STRV.ID)
	LEFT JOIN
		 	  CAREVIEW CARV ON(R.REPORTEE_ID = CARV.ID)
	LEFT JOIN
			  CL_REVIEW CLRV ON (R.REPORTEE_ID = CLRV.WRITER_ID)
		WHERE
			  GRADE = 'N'
		  AND
		  	  ISCHECKED = 'F'
		</select>
		<select id="selectCompletedUserList" resultType="A_Report_N">
		SELECT 
	          REPORT_NO AS REPORTNO
	        , REPORT_TYPE AS REPORTTYPE
	        , REPORT_REASON AS REPORTREASON
	        , CONCAT(NVL(BLIND, '0'), '건') AS ACCU
	        , IMGNAME
	        , NVL2(IMGNAME, 'O', 'X') AS HASIMG
	        , IMGPATH
	        , IMGCHNAME
	        , REPORTER_ID AS REPORTER
	        , REPORTEE_ID AS REPORTEE
	        , ITEM_CODE AS ITEMCODE
	        , NVL(REVIEW_CONTENT, ' ') AS STOREREVIEWCONTENT
	        , NVL(C_REV_CON, ' ') AS CAFEREVIEWCONTENT
	        , NVL(CL_REVIEW, ' ') AS CLASSREVIEWCONTENT
	        , CASE ISWARNED WHEN 'T' THEN '../../resources/img/admin/icon/blind.svg'
             				 ELSE '../../resources/img/admin/icon/restore.svg'
	          END AS ISWARNED
		 FROM
		      REPORT R
		 JOIN
		 	  MEMBER M ON(R.REPORTEE_ID = M.ID)
	LEFT JOIN 
			  PR_REVIEW STRV ON (R.REPORTEE_ID = STRV.ID)
	LEFT JOIN
			  CAREVIEW CARV ON(R.REPORTEE_ID = CARV.ID)
	LEFT JOIN
			  CL_REVIEW CLRV ON (R.REPORTEE_ID = CLRV.WRITER_ID)
		WHERE
			  GRADE = 'N'
		  AND
		  	  ISCHECKED = 'T'		
		</select>
		<select id="selectCafeList" resultType="A_CafeList">
	    SELECT
	          C_NAME AS CAFENAME
	        , PHONE 
	        , SUM(CASE WHEN REGEXP_REPLACE(PAY_NO, '[0-9]') = 'STP' THEN PAY_TOTAL ELSE '0' END ) AS STORESALES
	        , SUM(CASE WHEN REGEXP_REPLACE(PAY_NO, '[0-9]') = 'CL' THEN PAY_TOTAL ELSE '0' END ) AS CLASSSALES
	        , SUM(CASE WHEN REGEXP_REPLACE(PAY_NO, '[0-9]') = 'CAP' THEN PAY_TOTAL ELSE '0' END ) AS CAFESALES
	        , SUM(PAY_TOTAL) TOTALSALES
	        , TO_CHAR(OPENDATE,'yyyy-mm-dd') AS OPENDATE
	     FROM
	          M_PAY_LIST MV
   INNER JOIN
	          M_PARTNER P ON (MV.ID = P.ID)
   INNER JOIN
	          MEMBER M ON (MV.ID = M.ID) 
   INNER JOIN
	          CAFE C ON(MV.ID = C.ID) 
	<choose>
     		<when test="_parameter == 'day'">WHERE TO_DATE(SYSDATE,'yy-mm-dd') - TO_DATE(PAY_DATE, 'yy-mm-dd') = 0</when>
     		<when test="_parameter == 'week'">WHERE PAY_DATE <![CDATA[>=]]> TRUNC(SYSDATE, 'IW')
									  		  AND PAY_DATE <![CDATA[<]]> TRUNC(SYSDATE, 'IW') + 7</when>
     		<when test="_parameter == 'month'">WHERE PAY_DATE <![CDATA[>=]]> TRUNC(SYSDATE, 'MM')
											   AND PAY_DATE <![CDATA[<]]> LAST_DAY(SYSDATE)</when>
			<when test="_parameter == 'year'">WHERE EXTRACT(YEAR FROM PAY_DATE) = EXTRACT(YEAR FROM SYSDATE)</when>
   		</choose>		            
	 GROUP BY
			  C_NAME, PHONE, TO_CHAR(OPENDATE,'yyyy-mm-dd'), PHONE
		</select>
		<select id="selectCafeListByTerm" parameterType="map" resultType="A_CafeList">
	    SELECT
	          C_NAME AS CAFENAME
	        , PHONE 
	        , SUM(CASE WHEN REGEXP_REPLACE(PAY_NO, '[0-9]') = 'STP' THEN PAY_TOTAL ELSE '0' END ) AS STORESALES
	        , SUM(CASE WHEN REGEXP_REPLACE(PAY_NO, '[0-9]') = 'CL' THEN PAY_TOTAL ELSE '0' END ) AS CLASSSALES
	        , SUM(CASE WHEN REGEXP_REPLACE(PAY_NO, '[0-9]') = 'CAP' THEN PAY_TOTAL ELSE '0' END ) AS CAFESALES
	        , SUM(PAY_TOTAL) TOTALSALES
	        , TO_CHAR(OPENDATE,'yyyy-mm-dd') AS OPENDATE
	     FROM
	          M_PAY_LIST MV
   INNER JOIN
	          M_PARTNER P ON (MV.ID = P.ID)
   INNER JOIN
	          MEMBER M ON (MV.ID = M.ID) 
   INNER JOIN
	          CAFE C ON(MV.ID = C.ID) 
		WHERE
			  PAY_DATE <![CDATA[>]]> #{startDate}
      	  AND
      	  	  PAY_DATE <![CDATA[<]]> #{endDate}
     GROUP BY
     		  C_NAME, PHONE, TO_CHAR(OPENDATE,'yyyy-mm-dd')
		</select>
		<update id="updateUserWarned" parameterType="A_Report_N">
		 UPDATE 
	    	    M_NORMAL
	    	SET
	    		BLIND = BLIND + 1
	      WHERE
	      		ID = #{reportee}
		</update>
		<update id="updateUserReportStatus" parameterType="A_Report_N">
		  UPDATE
		 	 	REPORT
		 	SET
		 		ISCHECKED = 'T'
		 	  , ISWARNED = 'T'
		  WHERE
		  	    REPORT_NO = #{reportNo}
		</update>
		<update id="updateUserReportInvalid" parameterType="A_Report_N">
		  UPDATE
		 	 	REPORT
		 	SET
		 		ISCHECKED = 'T'
		 	  , ISWARNED = 'F'
		  WHERE
		  	    REPORT_NO = #{reportNo}
		</update>
		<select id="selectProfitByDate" parameterType="string" resultType="A_Profit">
		 SELECT
               (SUM(CASE WHEN REGEXP_REPLACE(PAY_NO, '[0-9]') != 'AD' THEN PAY_TOTAL ELSE '0' END)) * 0.05  AS FEE,
               (SUM(CASE WHEN REGEXP_REPLACE(PAY_NO, '[0-9]') = 'AD' THEN PAY_TOTAL ELSE '0' END))  AS AD,
               (SUM(CASE WHEN REGEXP_REPLACE(PAY_NO, '[0-9]') = 'STP' THEN PAY_TOTAL ELSE '0' END)) * 0.05 AS STOREFEE,
               (SUM(CASE WHEN REGEXP_REPLACE(PAY_NO, '[0-9]') = 'CL' THEN PAY_TOTAL ELSE '0' END)) * 0.05 AS CLASSFEE, 
               (SUM(CASE WHEN REGEXP_REPLACE(PAY_NO, '[0-9]') = 'CAP' THEN PAY_TOTAL ELSE '0' END)) * 0.05 AS CAFEFEE     
		   FROM
		   	   PAYMENT
		   <choose>
     		<when test="_parameter == 'day'">WHERE TO_DATE(SYSDATE,'yy-mm-dd') - TO_DATE(PAY_DATE, 'yy-mm-dd') = 0</when>
     		<when test="_parameter == 'week'">WHERE PAY_DATE <![CDATA[>=]]> TRUNC(SYSDATE, 'IW')
									  AND PAY_DATE <![CDATA[<]]> TRUNC(SYSDATE, 'IW') + 7</when>
     		<when test="_parameter == 'month'">WHERE PAY_DATE <![CDATA[>=]]> TRUNC(SYSDATE, 'MM')
											   AND PAY_DATE <![CDATA[<]]> LAST_DAY(SYSDATE)</when>
			<when test="_parameter == 'year'">WHERE EXTRACT(YEAR FROM PAY_DATE) = EXTRACT(YEAR FROM SYSDATE)</when>
   			</choose>
		</select>
		<insert id="insertCouponToUser" parameterType="A_Coupon">
		INSERT
		  INTO COUPON
		  (
		       COUPON_CODE
		     , ID
		     , COUPON_NAME
		     , LIMIT
		     , ISSUEDBY
		     , ISSUEDATE
		     , EXPDATE
		     , ISUSED
		  )
		VALUES
		  (
		       'CPN' || CPN.NEXTVAL
			 , #{id}
			 , #{couponName}
			 , #{couponLimit}
			 , #{issuedBy}
			 , DEFAULT
			 , DEFAULT
			 , DEFAULT
		  )		 
		</insert>
		<select id="selectWeeklySales" parameterType="_int" resultType="string">
		SELECT
			   NVL(SUM(PAY_TOTAL), 0)
		  FROM
		  	   PAYMENT
		 WHERE
		   	   PAY_DATE = TRUNC(NEXT_DAY(TRUNC(NEXT_DAY(SYSDATE, 1)) - INTERVAL '7' DAY, #{i}))		 
		</select>
		<select id="selectMonthlySales" parameterType="string" resultType="string">
		SELECT
			   NVL(SUM(PAY_TOTAL), 0)
		  FROM
		  	   PAYMENT	
	 	 WHERE
		 <choose>
		 	<when test='_parameter.equals("1")'>
		      TO_DATE(PAY_DATE) = TO_DATE(TRUNC(SYSDATE, 'MONTH'))
		 	</when>
		 	<when test='_parameter.equals("3")'>
		 	  TO_DATE(PAY_DATE) = TO_DATE(TRUNC(SYSDATE, 'MONTH') + INTERVAL '14' DAY)
		 	</when>
		 	<when test='_parameter.equals("5")'>
		 	  TO_DATE(PAY_DATE) = TO_DATE(LAST_DAY(SYSDATE))
		 	</when>
		 </choose>
		</select>
		<select id="selectYearlySales" parameterType="string" resultType="string">
		SELECT
		       NVL(SUM(PAY_TOTAL), 0)
		  FROM 
		       PAYMENT
		 WHERE
		 <choose>
		 	<when test='_parameter.equals("")'>
		 		EXTRACT(MONTH FROM PAY_DATE) - EXTRACT(MONTH FROM TRUNC(SYSDATE, 'YEAR')) = 0
		 	</when>
		 	<when test='_parameter.equals("3")'>
		 		EXTRACT(MONTH FROM PAY_DATE) - EXTRACT(MONTH FROM TRUNC(SYSDATE, 'YEAR') + INTERVAL '3' MONTH) = 0
		 	</when>
		 	<when test='_parameter.equals("6")'>
		 		EXTRACT(MONTH FROM PAY_DATE) - EXTRACT(MONTH FROM TRUNC(SYSDATE, 'YEAR') + INTERVAL '6' MONTH) = 0
		 	</when>
		 	<when test='_parameter.equals("9")'>
		 		EXTRACT(MONTH FROM PAY_DATE) - EXTRACT(MONTH FROM TRUNC(SYSDATE, 'YEAR') + INTERVAL '9' MONTH) = 0
		 	</when>
		 	<when test='_parameter.equals("11")'>
		 		EXTRACT(MONTH FROM PAY_DATE) - EXTRACT(MONTH FROM TRUNC(SYSDATE, 'YEAR') + INTERVAL '11' MONTH) = 0
		 	</when>
		 </choose>
		</select>
		<select id="selectProfitByTerm" parameterType="map" resultType="A_Profit">
	    SELECT
              (SUM(CASE WHEN REGEXP_REPLACE(PAY_NO, '[0-9]') != 'AD' THEN PAY_TOTAL ELSE '0' END)) * 0.05  AS FEE,
              (SUM(CASE WHEN REGEXP_REPLACE(PAY_NO, '[0-9]') = 'AD' THEN PAY_TOTAL ELSE '0' END))  AS AD,
              (SUM(CASE WHEN REGEXP_REPLACE(PAY_NO, '[0-9]') = 'STP' THEN PAY_TOTAL ELSE '0' END)) * 0.05 AS STOREFEE,
              (SUM(CASE WHEN REGEXP_REPLACE(PAY_NO, '[0-9]') = 'CL' THEN PAY_TOTAL ELSE '0' END)) * 0.05 AS CLASSFEE, 
              (SUM(CASE WHEN REGEXP_REPLACE(PAY_NO, '[0-9]') = 'CAP' THEN PAY_TOTAL ELSE '0' END)) * 0.05 AS CAFEFEE     
	     FROM
	   	  	  PAYMENT
	    WHERE
	    	  PAY_DATE <![CDATA[>]]> #{startDate}
          AND
          	  PAY_DATE <![CDATA[<]]> #{endDate}
		</select>
</mapper>
